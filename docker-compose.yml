services:
  web:
    image: intelrx/intelrx:vps
    build:
      context: .                # Use the root directory for building the image
      dockerfile: Dockerfile    # Use your Dockerfile
    ports:
      - 8080:8080
    env_file:
      - ~/Backend/.env
    environment:
      - SERVER_PORT=${SERVER_PORT}
      - SPRING_DATASOURCE_URL=${DATABASE_URL}
      - SPRING_DATASOURCE_USERNAME=${DATABASE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DATABASE_PASSWORD}
      - APPLICATION_SECURITY_JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - APPLICATION_SECURITY_JWT_EXPIRATION=${JWT_EXPIRATION}
      - APPLICATION_SECURITY_JWT_REFRESH_TOKEN_EXPIRATION=${JWT_REFRESH_TOKEN_EXPIRATION}


      # Flyway Configuration
      - SPRING_FLYWAY_URL=${DATABASE_URL}
      - SPRING_FLYWAY_USER=${DATABASE_USERNAME}
      - SPRING_FLYWAY_PASSWORD=${DATABASE_PASSWORD}
      - SPRING_FLYWAY_BASELINE_ON_MIGRATE=true
      - SPRING_FLYWAY_LOCATIONS=classpath:db/migration
      - SPRING_FLYWAY_ENABLED=true
      - SPRING_FLYWAY_BASELINE_VERSION=1

      - SPRING_JPA_GENERATE_DDL=true
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_LOB_NON_CONTEXTUAL_CREATION=true

      - AWS_ACCESSKEY=${AWS_ACCESS_KEY}
      - AWS_SECRETKEY=${AWS_SECRET_KEY}
      - AWS_BUCKET_NAME=${AWS_BUCKET_NAME}
      - SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE=10MB
      - SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE=10MB

      - SPRING_INTELRX_URL=${INTELRX_URL}

      - SPRING_OPENAI_MODEL=${OPENAI_MODEL}
      - SPRING_OPENAI_API_URL=${OPENAI_API_URL}
      - SPRING_OPENAI_API_KEY=${OPENAI_API_KEY}

      - SPRING_TERMII_API_URL=${TERMII_API_URL}
      - SPRING_TERMII_API_KEY=${TERMII_API_KEY}
      - SPRING_TERMII_SMS_FROM=${TERMII_SMS_FROM}

      - SPRING_MAIL_USERNAME=${ZOHO_EMAIL_USERNAME}
      - SPRING_MAIL_PASSWORD=${ZOHO_EMAIL_PASSWORD}
